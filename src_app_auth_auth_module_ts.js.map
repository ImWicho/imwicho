{"version":3,"file":"src_app_auth_auth_module_ts.js","mappings":"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","sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/login-page/login-page.component.ts","./src/app/auth/services/login-service.service.ts","./src/app/shared/services/toast.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPageComponent,\r\n  },\r\n  {\r\n    path: 'update-password',\r\n    loadChildren: () => import('./update-password-page/update-password-page.module').then( m => m.UpdatePasswordPagePageModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [LoginPageComponent],\r\n  imports: [CommonModule, AuthRoutingModule, IonicModule, FormsModule],\r\n})\r\nexport class AuthModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DataHttp, ErrorResponse } from 'src/app/shared/interfaces/errors-http';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\nimport { IUser } from '../interface/iuser';\r\nimport { LoginServiceService } from '../services/login-service.service';\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.scss'],\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n\r\n  getDataInputs: IUser = { email: '', password: ''};\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private toastService: ToastService,\r\n    private service: LoginServiceService\r\n  ) { }\r\n\r\n  ngOnInit() {}\r\n\r\n  login(): void {\r\n    if (this.validateInputs()) {\r\n      this.service.login(this.getDataInputs).subscribe((res: DataHttp) => {\r\n        if (res.status) {\r\n          console.log(res);\r\n          this.toastService.showToast(`${res.message}.`, 2500, 'checkmark-outline', 'success').then(\r\n          () => this.router.navigateByUrl('/meeting'));\r\n          // Storing the User data.\r\n          // this.storageService.store(AuthConstants.AUTH, res.userData);\r\n        } else {\r\n          this.toastService.showToast(res.message, 2800,\r\n          'warning-outline', 'warning');\r\n        }\r\n      }, (error: ErrorResponse) => {\r\n        this.toastService.showToast(error.error.message, 3000, 'close-outline', 'danger');\r\n      });\r\n    } else {\r\n      this.toastService.showToast('Los campos de usuario y contaseÃ±a no pueden estar vacios.', 2800,\r\n      'warning-outline', 'warning');\r\n    }\r\n  }\r\n\r\n  private validateInputs() {\r\n    const email = this.getDataInputs.email.trim();\r\n    const password = this.getDataInputs.password.trim();\r\n    return (\r\n      this.getDataInputs.email &&\r\n      this.getDataInputs.password &&\r\n      email.length > 0 &&\r\n      password.length > 0\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginServiceService {\r\n\r\n  private readonly ApiUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(credentials) {\r\n    return this.http.post<any>(`${this.ApiUrl}/api/v1/prequoter/login`, credentials);\r\n  }\r\n\r\n  refreshToken() {\r\n    return this.http.post<any>(`${this.ApiUrl}/api/v1/prequoter/refreshToken`, {});\r\n  }\r\n\r\n  changePassword(credentialsUser) {\r\n    return this.http.post<any>(`${this.ApiUrl}/api/v1/prequoter/changePassword`, credentialsUser);\r\n  }\r\n\r\n  logout() {\r\n    return this.http.post<any>(`${this.ApiUrl}/api/v1/prequoter/logout`, {});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n\r\n  constructor(private toastController: ToastController) { }\r\n\r\n  async showToast(messageNew: string, duration?: number, nameIcon?: string, colorName?: string) {\r\n    const toast = await this.toastController.create({\r\n      message: messageNew,\r\n      duration: duration ? duration : 2500,\r\n      icon: nameIcon,\r\n      position: 'bottom',\r\n      color: colorName,\r\n      animated: true\r\n    });\r\n\r\n    await toast.present();\r\n\r\n    await toast.onDidDismiss();\r\n  }\r\n}\r\n"],"names":["Injectable","ToastController","ToastService","constructor","toastController","showToast","messageNew","duration","nameIcon","colorName","toast","create","message","icon","position","color","animated","present","onDidDismiss","providedIn"],"sourceRoot":"webpack:///"}